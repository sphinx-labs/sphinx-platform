// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY
// SPDX-License-Identifier: MIT
pragma solidity >=0.7.4 <0.9.0;

import { Sphinx } from "@sphinx-labs/plugins/Sphinx.sol";
import { SphinxConfig, DeployOptions } from "@sphinx-labs/plugins/SphinxPluginTypes.sol";
import { FailsDeployment } from "__sphinx__/contracts/FailsDeployment.sol";
import { HelloSphinx } from "__sphinx__/contracts/HelloSphinx.sol";

abstract contract SphinxClient is Sphinx {
  function deployFailsDeployment(
    bool _shouldRevert
  ) internal returns (FailsDeployment) {
    return deployFailsDeployment(
      _shouldRevert,
      DeployOptions({ salt: bytes32(0), referenceName: "FailsDeployment" })
    );
  }

  function deployFailsDeployment(
    bool _shouldRevert,
    DeployOptions memory _sphinxInternalDeployOptions
  ) internal returns (FailsDeployment) {
    bytes memory sphinxInternalConstructorArgs = abi.encode(
      _shouldRevert
    );
    return FailsDeployment(
      _sphinxDeployContract(
        _sphinxInternalDeployOptions.referenceName,
        _sphinxInternalDeployOptions.salt,
        sphinxInternalConstructorArgs,
        "__sphinx__/contracts/FailsDeployment.sol:FailsDeployment",
        "FailsDeployment.sol:FailsDeployment"
      )
    );
  }
function deployHelloSphinx(
    uint8 _myNumber,
    address _myAddress
  ) internal returns (HelloSphinx) {
    return deployHelloSphinx(
      _myNumber,
      _myAddress,
      DeployOptions({ salt: bytes32(0), referenceName: "HelloSphinx" })
    );
  }

  function deployHelloSphinx(
    uint8 _myNumber,
    address _myAddress,
    DeployOptions memory _sphinxInternalDeployOptions
  ) internal returns (HelloSphinx) {
    bytes memory sphinxInternalConstructorArgs = abi.encode(
      _myNumber,
      _myAddress
    );
    return HelloSphinx(
      _sphinxDeployContract(
        _sphinxInternalDeployOptions.referenceName,
        _sphinxInternalDeployOptions.salt,
        sphinxInternalConstructorArgs,
        "__sphinx__/contracts/HelloSphinx.sol:HelloSphinx",
        "HelloSphinx.sol:HelloSphinx"
      )
    );
  }
}
